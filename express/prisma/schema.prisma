// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  email    String    @unique
  password String
  bio      String?
  image    String?
  profile  Profile?
  articles Article[]
  comments Comment[]
}

model Profile {
  id        Int     @id @default(autoincrement())
  bio       String?
  image     String?
  following Boolean @default(false)
  userId    Int     @unique
  user      User    @relation(fields: [userId], references: [id])
}

model Article {
  id             Int       @id @default(autoincrement())
  slug           String    @unique
  title          String
  description    String
  body           String
  tagList        String[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  favoritesCount Int       @default(0)
  authorId       Int
  author         User      @relation(fields: [authorId], references: [id])
  comments       Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  articleId Int
  authorId  Int
  article   Article  @relation(fields: [articleId], references: [id])
  author    User     @relation(fields: [authorId], references: [id])
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique
}
